#!/bin/bash

function test_close_task_branch_does_not_contain_release_version {
    setup_task "1234" "minor"

    rm .CI_NEXTRELEASE

    close-task.sh 2>&1 | tee tmp.log
    test "$(cat tmp.log | tail -1)" = ".CI_NEXTRELEASE does not exist. Cannot close a task without it"
}

function test_close_task_branch_does_not_contain_taskid {
    setup_task "1234" "minor"

    rm .CI_TASKID

    close-task.sh 2>&1 | tee tmp.log
    test "$(cat tmp.log | tail -1)" = ".CI_TASKID does not exist, cannot close a task without it. Make sure the branch is not already closed"
}

function test_close_task_index_not_clear {
    setup_task "1234" "major"
    printf "test" > test
    git add test

    close-task.sh 2>&1 | tee tmp.log
    test "$(cat tmp.log | tail -1)" = "commit the index changes or restore them before closing a task"
}

function test_close_task_not_a_feature_branch {
    git init
    create_commit

    close-task.sh 2>&1 | tee tmp.log
    test "$(cat tmp.log | tail -1)" = "you can close a task only if you are on a feature branch"
}

function test_close_task_remote_master_is_ahead {
    setup_task "1234" "minor"

    # remote
    cd ../remote

    create_commit

    # local
    cd ../local

    close-task.sh 2>&1 | tee tmp.log
    test "$(cat tmp.log | tail -1)" = "master branch has new changes. Merge/Rebase before closing the feature"
}

function test_close_task_remote_feature_branch_is_ahead {
    setup_task "1234" "minor"

    # remote
    cd ../remote

    git checkout feature/1234
    create_commit

    # local
    cd ../local

    close-task.sh 2>&1 | tee tmp.log
    test "$(cat tmp.log | tail -1)" = "feature branch has new changes. Pull them before closing the feature"
}

function test_close_task_commit_not_pushed_yet {
    setup_task "1234" "minor"

    create_commit

    close-task.sh 2>&1 | tee tmp.log
    test "$(cat tmp.log | tail -1)" = "Push local commits before closing a task"
}

function test_close_task_branch_already_closed {
    setup_task "1234" "minor"
    create_commit
    git push origin feature/1234

    # another local repo
    cd ..
    mkdir local2 && cd "$_"
    git clone ../remote .

    git checkout feature/1234
    close-task.sh

    cd ../local
    git checkout master
    git pull origin master

    git checkout feature/1234
    git pull origin feature/1234

    close-task.sh 2>&1 | tee tmp.log
    test "$(cat tmp.log | tail -1)" = ".CI_TASKID does not exist, cannot close a task without it. Make sure the branch is not already closed"
}

function test_close_task_pending_changes {
    setup_task "1234" "major"
    create_commit_with_file_content "testfile" "mycontent"
    git push origin feature/1234

    printf " new changes" >> testfile

    close-task.sh 2>&1 | tee tmp.log
    test "$(cat tmp.log | tail -1)" = "commit, stash or discard pending changes before closing the task"
}